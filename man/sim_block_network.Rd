% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_network.R
\name{sim_block_network}
\alias{sim_block_network}
\title{Generate a trait-based random network in smaller chunks and merge them together}
\usage{
sim_block_network(
  N,
  K,
  prev_K,
  rho_K,
  p_edge_within,
  p_edge_between,
  directed = FALSE,
  chunk_size = 1000
)
}
\arguments{
\item{N}{number of nodes in the network.}

\item{K}{number of groups (traits) in the network.}

\item{prev_K}{named vector of prevalences with unique names identifying each group. The last element should correspond to the hidden group prevalence.}

\item{rho_K}{numeric vector of correlations in group memberships.}

\item{p_edge_within}{named list of numeric vectors giving probability of link between in-group members and out-group members for each of groups. The order of objects in list have to follow the order of `prev_K`.}

\item{p_edge_between}{named list of numeric values giving probability of link between in- and out-group member for each of groups. The order of objects in list have to follow the order of \code{prev_K}.}

\item{directed}{logical scalar indicating whether the network is directed (default is \code{FALSE}).}

\item{chunk_size}{size of each chunk used to generate the network (default is 1000).}
}
\value{
An igraph object representing the trait-based random network.
}
\description{
This function generates a trait-based random network with a large number of nodes in smaller chunks and merges them together. This approach helps to avoid memory issues that may arise when generating the network in a single call to \code{igraph::sample_pref()}. The resulting network should have the same properties as the one generated by a single call to \code{igraph::sample_pref()}.
}
\examples{
\dontrun{# Generate a trait-based random network with 50,000 nodes
g <- sim_block_network(N = 50000, K = 2, prev_K = c(known1 = .2, hidden = .16), rho_K = 0.25, p_edge_within = list(known1 = c(.2, .2), hidden = c(.2, .3)), p_edge_between = list(known1 = .2, hidden = .2), directed = FALSE, chunk_size = 1000)}

}
